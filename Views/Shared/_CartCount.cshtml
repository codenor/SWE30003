@using ElectronicsStoreAss3.Helper
@using System.Security.Claims

@{
    var cartService = Context.RequestServices.GetService<ElectronicsStoreAss3.Services.IShoppingCartService>();
    int cartCount = 0;

    if (cartService != null)
    {
        try
        {
            // Check if user is authenticated
            if (Context.User.Identity.IsAuthenticated)
            {
                // Try to get account ID from claims
                var accountIdClaim = Context.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                if (int.TryParse(accountIdClaim, out int accountId))
                {
                    cartCount = await cartService.GetCartItemCountAsync(accountId);
                }
                else
                {
                    // Fallback to session if account ID not found
                    var sessionId = Session.GetOrCreate(Context);
                    cartCount = await cartService.GetCartItemCountAsync(sessionId);
                }
            }
            else
            {
                // Guest user - use session helper
                var sessionId = Session.GetOrCreate(Context);
                cartCount = await cartService.GetCartItemCountAsync(sessionId);
            }
        }
        catch
        {
            cartCount = 0;
        }
    }
}

@if (cartCount > 0)
{
    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger"
          style="font-size: 0.7em;">
        @cartCount
        <span class="visually-hidden">items in cart</span>
    </span>
}