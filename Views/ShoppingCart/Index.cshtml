@model ElectronicsStoreAss3.Models.ShoppingCartViewModel

@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2><i class="bi bi-cart"></i> Shopping Cart</h2>
            
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show">
                    <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
            
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show">
                    <i class="bi bi-exclamation-circle"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }
        </div>
    </div>
    
    @if (Model.IsEmpty)
    {
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="text-center">
                    <i class="bi bi-cart-x display-1 text-muted"></i>
                    <h4 class="mt-3">Your cart is empty</h4>
                    <p class="text-muted">Looks like you haven't added any items to your cart yet.</p>
                    <a href="@Url.Action("Catalogue", "Product")" class="btn btn-primary btn-lg">
                        <i class="bi bi-shop"></i> Start Shopping
                    </a>
                </div>
            </div>
        </div>
        
        <!-- Popular Products for Empty Cart -->
        <div class="row mt-5">
            <div class="col-12">
                <h4 class="mb-3"><i class="bi bi-graph-up"></i> Popular Products</h4>
                <div class="card">
                    <div class="card-body p-0">
                        <div id="popularProductsCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                <!-- This would be populated from the server with actual data -->
                                <div class="carousel-item active">
                                    <div class="row p-3">
                                        <div class="col-md-3 mb-3">
                                            <div class="card h-100">
                                                <div class="bg-light text-center p-3">
                                                    <i class="bi bi-laptop display-4"></i>
                                                </div>
                                                <div class="card-body">
                                                    <h6 class="card-title">Premium Laptop</h6>
                                                    <p class="text-success fw-bold">$999.99</p>
                                                    <span class="badge bg-info">Top Seller</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 mb-3">
                                            <div class="card h-100">
                                                <div class="bg-light text-center p-3">
                                                    <i class="bi bi-headphones display-4"></i>
                                                </div>
                                                <div class="card-body">
                                                    <h6 class="card-title">Wireless Headphones</h6>
                                                    <p class="text-success fw-bold">$149.99</p>
                                                    <span class="badge bg-info">Popular</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 mb-3">
                                            <div class="card h-100">
                                                <div class="bg-light text-center p-3">
                                                    <i class="bi bi-phone display-4"></i>
                                                </div>
                                                <div class="card-body">
                                                    <h6 class="card-title">Smartphone Pro</h6>
                                                    <p class="text-success fw-bold">$799.99</p>
                                                    <span class="badge bg-warning">Hot Item</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3 mb-3">
                                            <div class="card h-100">
                                                <div class="bg-light text-center p-3">
                                                    <i class="bi bi-smartwatch display-4"></i>
                                                </div>
                                                <div class="card-body">
                                                    <h6 class="card-title">Smart Watch</h6>
                                                    <p class="text-success fw-bold">$249.99</p>
                                                    <span class="badge bg-info">Trending</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <!-- Cart Items -->
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-ul"></i> Cart Items (@Model.TotalItems items)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.CartItems)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.ProductImagePath))
                                                    {
                                                        <img src="@item.ProductImagePath" alt="@item.ProductName" 
                                                             class="rounded me-3" style="width: 60px; height: 60px; object-fit: cover;" />
                                                    }
                                                    else
                                                    {
                                                        <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                                             style="width: 60px; height: 60px;">
                                                            <i class="bi bi-image text-muted"></i>
                                                        </div>
                                                    }
                                                    <div>
                                                        <h6 class="mb-1">@item.ProductName</h6>
                                                        <small class="text-muted">SKU: @item.ProductSKU</small>
                                                        <br/>
                                                        <small class="@(item.IsInStock ? "text-muted" : "text-danger")">
                                                            @if (!item.IsInStock)
                                                            {
                                                                <i class="bi bi-exclamation-circle"></i> <span>Out of Stock</span>
                                                            }
                                                            else if (!item.IsQuantityAvailable)
                                                            {
                                                                <i class="bi bi-exclamation-triangle"></i> <span>Only @item.ProductStockLevel available</span>
                                                            }
                                                            else
                                                            {
                                                                <span>Stock: @item.ProductStockLevel</span>
                                                            }
                                                        </small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <strong>$@item.UnitPrice.ToString("F2")</strong>
                                            </td>
                                            <td class="align-middle">
                                                <!-- Quantity Input with Auto-Update -->
                                                <div class="input-group" style="width: 120px;">
                                                    <button type="button" class="btn btn-outline-secondary btn-sm quantity-btn" 
                                                            data-action="decrease" data-item-id="@item.ShoppingCartItemId"
                                                            @(item.IsInStock && item.Quantity > 1 ? "" : "disabled")>
                                                        <i class="bi bi-dash"></i>
                                                    </button>
                                                    <input type="number" class="form-control form-control-sm text-center quantity-input" 
                                                           value="@item.Quantity" min="1" max="@item.ProductStockLevel"
                                                           data-item-id="@item.ShoppingCartItemId"
                                                           @(item.IsInStock ? "" : "disabled") />
                                                    <button type="button" class="btn btn-outline-secondary btn-sm quantity-btn"
                                                            data-action="increase" data-item-id="@item.ShoppingCartItemId"
                                                            @(item.IsInStock && item.Quantity < item.ProductStockLevel ? "" : "disabled")>
                                                        <i class="bi bi-plus"></i>
                                                    </button>
                                                </div>
                                                <div class="spinner-border spinner-border-sm text-primary d-none update-spinner" 
                                                     role="status" data-item-id="@item.ShoppingCartItemId">
                                                    <span class="visually-hidden">Updating...</span>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <strong>$@item.TotalPrice.ToString("F2")</strong>
                                            </td>
                                            <td class="align-middle">
                                                <!-- Remove Item Button -->
                                                <button type="button" class="btn btn-outline-danger btn-sm remove-item-btn" 
                                                        data-bs-toggle="modal" data-bs-target="#removeItemModal"
                                                        data-item-id="@item.ShoppingCartItemId" 
                                                        data-product-name="@item.ProductName">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between align-items-center">
                            <a href="@Url.Action("Catalogue", "Product")" class="btn btn-outline-primary">
                                <i class="bi bi-arrow-left"></i> Continue Shopping
                            </a>
                            
                            <!-- Clear Cart Button -->
                            <button type="button" class="btn btn-outline-danger" 
                                    data-bs-toggle="modal" data-bs-target="#clearCartModal">
                                <i class="bi bi-trash"></i> Clear Cart
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Cart Statistics -->
                <div class="card mt-4">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-graph-up"></i> Shopping Insights
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6>Price Analysis</h6>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Highest priced item:</span>
                                    <span class="fw-bold">$@Model.CartItems.Max(i => i.UnitPrice).ToString("F2")</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Lowest priced item:</span>
                                    <span class="fw-bold">$@Model.CartItems.Min(i => i.UnitPrice).ToString("F2")</span>
                                </div>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Average item price:</span>
                                    <span class="fw-bold">$@(Model.CartItems.Average(i => i.UnitPrice).ToString("F2"))</span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6>Cart Composition</h6>
                                <div class="progress mb-2" style="height: 20px;">
                                    @{
                                        var categories = Model.CartItems.GroupBy(i => i.ProductSKU.Split('-')[0])
                                            .Select(g => new { Category = g.Key, Total = g.Sum(i => i.TotalPrice) })
                                            .OrderByDescending(x => x.Total)
                                            .ToList();
                                        
                                        var colors = new[] { "primary", "success", "warning", "danger", "info" };
                                        var totalAmount = Model.TotalAmount;
                                    }
                                    
                                    @for (int i = 0; i < categories.Count; i++)
                                    {
                                        var percentage = (categories[i].Total / totalAmount) * 100;
                                        var color = colors[i % colors.Length];
                                        <div class="progress-bar bg-@color" role="progressbar" 
                                             style="width: @percentage.ToString("F0")%" 
                                             aria-valuenow="@percentage.ToString("F0")" aria-valuemin="0" aria-valuemax="100">
                                            @categories[i].Category
                                        </div>
                                    }
                                </div>
                                <div class="small text-muted">
                                    Category distribution based on product value
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Order Summary -->
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-receipt"></i> Order Summary
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal (@Model.TotalItems items):</span>
                            <span>$@Model.SubTotal.ToString("F2")</span>
                        </div>
                        
                        <div class="d-flex justify-content-between mb-2 @(Model.ShippingFee > 0 ? "" : "text-success")">
                            <span>Shipping:</span>
                            <span>@(Model.ShippingFee > 0 ? $"${Model.ShippingFee:F2}" : "Free")</span>
                        </div>
                        
                        <div class="d-flex justify-content-between mb-2">
                            <span>GST (10%):</span>
                            <span>$@Model.GST.ToString("F2")</span>
                        </div>
                        
                        <hr/>
                        
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Total:</strong>
                            <strong class="text-primary">$@Model.GrandTotal.ToString("F2")</strong>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <a href="@Url.Action("Details", "Checkout")" class="btn btn-success btn-lg">
                                <i class="bi bi-credit-card"></i> Proceed to Checkout
                            </a>
                            <small class="text-muted text-center">
                                <i class="bi bi-shield-lock"></i> Secure checkout with SSL encryption
                            </small>
                        </div>
                    </div>
                </div>
                
                <!-- Recommendations -->
                <div class="card mt-3">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-lightbulb"></i> Recommended For You
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 40px; height: 40px;">
                                        <i class="bi bi-battery-charging"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">Power Bank 10000mAh</h6>
                                        <small class="text-muted">$49.99</small>
                                    </div>
                                </div>
                                <span class="badge bg-primary rounded-pill">94% match</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 40px; height: 40px;">
                                        <i class="bi bi-usb-drive"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">USB-C Cable Pack</h6>
                                        <small class="text-muted">$19.99</small>
                                    </div>
                                </div>
                                <span class="badge bg-primary rounded-pill">87% match</span>
                            </li>
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <div class="d-flex align-items-center">
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 40px; height: 40px;">
                                        <i class="bi bi-speaker"></i>
                                    </div>
                                    <div>
                                        <h6 class="mb-0">Portable Bluetooth Speaker</h6>
                                        <small class="text-muted">$79.99</small>
                                    </div>
                                </div>
                                <span class="badge bg-primary rounded-pill">82% match</span>
                            </li>
                        </ul>
                    </div>
                    <div class="card-footer text-center">
                        <a href="@Url.Action("Catalogue", "Product")" class="btn btn-outline-primary btn-sm">
                            View More Recommendations
                        </a>
                    </div>
                </div>
                
                <!-- Additional Info -->
                <div class="card mt-3">
                    <div class="card-body">
                        <h6 class="card-title">
                            <i class="bi bi-info-circle"></i> Need Help?
                        </h6>
                        <p class="card-text small text-muted">
                            Questions about your order? Contact our customer service team.
                        </p>
                        <a href="@Url.Action("Contact", "Home")" class="btn btn-outline-secondary btn-sm">
                            Contact Support
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Frequently Bought Together -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-basket"></i> Frequently Bought Together
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="d-flex align-items-center">
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 80px; height: 80px;">
                                        <i class="bi bi-laptop display-6"></i>
                                    </div>
                                    <div class="text-center mx-3">
                                        <i class="bi bi-plus-circle-fill text-muted"></i>
                                    </div>
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 80px; height: 80px;">
                                        <i class="bi bi-mouse display-6"></i>
                                    </div>
                                    <div class="text-center mx-3">
                                        <i class="bi bi-plus-circle-fill text-muted"></i>
                                    </div>
                                    <div class="bg-light rounded me-3 d-flex align-items-center justify-content-center" 
                                         style="width: 80px; height: 80px;">
                                        <i class="bi bi-headset display-6"></i>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <p>Complete your purchase with these popular complementary items that other customers frequently buy together.</p>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="" id="bundleItem1" checked>
                                        <label class="form-check-label" for="bundleItem1">
                                            Wireless Mouse ($29.99)
                                        </label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="" id="bundleItem2" checked>
                                        <label class="form-check-label" for="bundleItem2">
                                            Gaming Headset ($59.99)
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <h6>Bundle Price</h6>
                                        <p class="text-success h4">$89.98</p>
                                        <p class="text-muted"><small>You save: $10.00 (10%)</small></p>
                                        <button class="btn btn-primary btn-sm">
                                            <i class="bi bi-plus-circle"></i> Add Bundle to Cart
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Modals -->
@await Html.PartialAsync("_CartModals")

@section Scripts {
<script>
    // Initialize on document load
    document.addEventListener('DOMContentLoaded', initializeCart);
    
    // Main initialization function
    function initializeCart() {
        setupQuantityButtons();
        setupQuantityInputs();
        setupRemoveItemModal();
    }
    
    // Setup quantity buttons (+ and -)
    function setupQuantityButtons() {
        document.querySelectorAll('.quantity-btn').forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.dataset.itemId;
                const action = this.dataset.action;
                const inputElement = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);
                
                let currentValue = parseInt(inputElement.value);
                const min = parseInt(inputElement.getAttribute('min'));
                const max = parseInt(inputElement.getAttribute('max'));
                
                if (action === 'increase' && currentValue < max) {
                    currentValue++;
                } else if (action === 'decrease' && currentValue > min) {
                    currentValue--;
                }
                
                inputElement.value = currentValue;
                updateCartItemQuantity(itemId, currentValue);
            });
        });
    }
    
    // Setup quantity input fields
    function setupQuantityInputs() {
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('change', function() {
                const itemId = this.dataset.itemId;
                let value = parseInt(this.value);
                const min = parseInt(this.getAttribute('min'));
                const max = parseInt(this.getAttribute('max'));
                
                // Validate input
                if (isNaN(value) || value < min) {
                    value = min;
                    this.value = min;
                } else if (value > max) {
                    value = max;
                    this.value = max;
                }
                
                updateCartItemQuantity(itemId, value);
            });
        });
    }
    
    // Setup remove item modal
    function setupRemoveItemModal() {
        const removeItemModal = document.getElementById('removeItemModal');
        if (removeItemModal) {
            removeItemModal.addEventListener('show.bs.modal', function(event) {
                const button = event.relatedTarget;
                const itemId = button.getAttribute('data-item-id');
                const productName = button.getAttribute('data-product-name');
                
                document.getElementById('removeItemId').value = itemId;
                document.getElementById('removeItemName').textContent = productName;
            });
        }
    }
    
    // Show error modal
    function showErrorModal(message) {
        const errorMessage = document.getElementById('updateErrorMessage');
        errorMessage.textContent = message || 'An error occurred while updating the cart.';
        
        const errorModal = new bootstrap.Modal(document.getElementById('updateErrorModal'));
        errorModal.show();
    }
    
    // Update cart item quantity
    function updateCartItemQuantity(itemId, quantity) {
        // Show spinner and disable controls
        toggleLoadingState(itemId, true);
        
        // Get CSRF token and prepare form data
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        const formData = new FormData();
        formData.append('cartItemId', itemId);
        formData.append('quantity', quantity);
        formData.append('__RequestVerificationToken', token);
        
        // Send update request
        fetch('/ShoppingCart/UpdateQuantity', {
            method: 'POST',
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: formData
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (data && data.success) {
                // Refresh the page to show updated cart
                location.reload();
            } else {
                // Show error modal
                showErrorModal(data && data.message ? data.message : 'Failed to update quantity.');
                toggleLoadingState(itemId, false);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showErrorModal('An error occurred while updating the cart. Please try again.');
            toggleLoadingState(itemId, false);
        });
    }
    
    // Toggle loading state for cart item controls
    function toggleLoadingState(itemId, isLoading) {
        const spinner = document.querySelector(`.update-spinner[data-item-id="${itemId}"]`);
        const input = document.querySelector(`.quantity-input[data-item-id="${itemId}"]`);
        const buttons = document.querySelectorAll(`.quantity-btn[data-item-id="${itemId}"]`);
        
        if (isLoading) {
            spinner.classList.remove('d-none');
            input.disabled = true;
            buttons.forEach(btn => btn.disabled = true);
        } else {
            spinner.classList.add('d-none');
            input.disabled = false;
            buttons.forEach(btn => btn.disabled = false);
        }
    }
</script>
}