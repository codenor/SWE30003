@model IEnumerable<ElectronicsStoreAss3.Models.Product.ProductViewModel>

@{
    ViewData["Title"] = "Products";
    var searchTerm = ViewBag.SearchTerm as string;
    var searchCategory = ViewBag.SearchCategory as string;
    var categories = ViewBag.Categories as List<string> ?? new List<string>();
    var totalProducts = Model?.Count() ?? 0;
}

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Products</h2>
        <a asp-route="AdminProducts" asp-route-action="Create" class="btn btn-primary">
            <i class="bi bi-plus"></i> Create New Product
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search Form -->
    <div class="card mb-4">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-3">
                <div class="col-md-5">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" name="searchTerm" class="form-control"
                               placeholder="Search by name, SKU, description or brand..."
                               value="@searchTerm"/>
                    </div>
                </div>
                <div class="col-md-4">
                    <select name="searchCategory" class="form-select">
                        <option value="">All Categories</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category" selected="@(category == searchCategory)">@category</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <div class="d-grid gap-2 d-md-flex">
                        <button type="submit" class="btn btn-primary flex-grow-1">
                            <i class="bi bi-search"></i> Search
                        </button>
                        @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(searchCategory))
                        {
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-x-circle"></i> Clear
                            </a>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>


    @if (Model?.Any() == true)
    {
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                <tr>
                    <th>SKU</th>
                    <th>Name</th>
                    <th>Category</th>
                    <th>Brand</th>
                    <th>Price</th>
                    <th>Stock Level</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <code>@Html.DisplayFor(modelItem => item.SKU)</code>
                        </td>
                        <td>
                            <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                            <br>
                            <small class="text-muted">@Html.DisplayFor(modelItem => item.Description)</small>
                        </td>
                        <td>
                            <span class="badge bg-secondary">@Html.DisplayFor(modelItem => item.Category)</span>
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Brand)</td>
                        <td>
                            <strong>@Html.DisplayFor(modelItem => item.Price)</strong>
                        </td>
                        <td>
                            @if (item.StockLevel <= item.LowStockThreshold)
                            {
                                <span class="badge bg-warning text-dark">
                                @Html.DisplayFor(modelItem => item.StockLevel)
                                    <i class="bi bi-exclamation-circle"></i>
                            </span>
                            }
                            else
                            {
                                <span class="badge bg-success">@Html.DisplayFor(modelItem => item.StockLevel)</span>
                            }
                        </td>
                        <td>
                            @if (item.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Inactive</span>
                            }
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-route="AdminProducts" asp-route-action="Details" asp-route-id="@item.ProductId"
                                   class="btn btn-sm btn-outline-info" title="View Details">
                                    <i class="bi bi-eye"></i> View
                                </a>
                                <a asp-route="AdminProducts" asp-route-action="Edit" asp-route-id="@item.ProductId"
                                   class="btn btn-sm btn-outline-primary" title="Edit">
                                    <i class="bi bi-pencil"></i> Edit
                                </a>
                                <a asp-route="AdminProducts" asp-route-action="Delete" asp-route-id="@item.ProductId"
                                   class="btn btn-sm btn-outline-danger" title="Delete">
                                    <i class="bi bi-trash"></i> Delete
                                </a>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center">
            <h4>No products found</h4>
            <p>
                @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(searchCategory))
                {
                    <span>No products match your search criteria. Please try different search terms.</span>
                }
                else
                {
                    <span>There are currently no products in the system.</span>
                }
            </p>
            <div class="mt-3">
                @if (!string.IsNullOrEmpty(searchTerm) || !string.IsNullOrEmpty(searchCategory))
                {
                    <a asp-action="Index" class="btn btn-outline-secondary me-2">
                        <i class="bi bi-arrow-left"></i> Back to All Products
                    </a>
                }
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus"></i> Create New Product
                </a>
            </div>
        </div>
    }

    <div class="mt-4">
        <div class="row">
            <div class="col-md-6">
                <p class="text-muted">
                    Total Products: <strong>@totalProducts</strong>
                </p>
            </div>
            <div class="col-md-6 text-end">
                <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-house"></i> Back to Home
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-dismiss alerts after 5 seconds
        setTimeout(function () {
            $('.alert').alert('close');
        }, 5000);

        // Search functionality
        document.addEventListener('DOMContentLoaded', function () {
            // Get form elements
            const searchForm = document.querySelector('form[asp-action="Index"]');
            const searchTermInput = document.querySelector('input[name="searchTerm"]');
            const categorySelect = document.querySelector('select[name="searchCategory"]');
            const clearButton = document.querySelector('a.btn-outline-secondary[asp-action="Index"]');

            // Setup category filter to submit form on change
            if (categorySelect) {
                categorySelect.addEventListener('change', function () {
                    searchForm.submit();
                });
            }

            // Setup search input with debounce
            if (searchTermInput) {
                let debounceTimer;

                searchTermInput.addEventListener('input', function () {
                    clearTimeout(debounceTimer);
                    const searchValue = this.value.trim();

                    // Only search if at least 2 characters are entered
                    if (searchValue.length >= 2) {
                        debounceTimer = setTimeout(function () {
                            searchForm.submit();
                        }, 500); // 500ms debounce
                    }
                });

                // When the user presses Enter, submit the form immediately
                searchTermInput.addEventListener('keydown', function (e) {
                    if (e.key === 'Enter') {
                        clearTimeout(debounceTimer);
                        searchForm.submit();
                    }
                });
            }

            // Highlight search terms in the results
            const highlightSearchTerms = function () {
                const searchTerm = "@searchTerm";
                if (!searchTerm) return;

                const termParts = searchTerm.toLowerCase().split(' ').filter(Boolean);
                if (termParts.length === 0) return;

                const productTable = document.querySelector('.table-responsive table');
                if (!productTable) return;

                const tableRows = productTable.querySelectorAll('tbody tr');

                tableRows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    cells.forEach(cell => {
                        const originalHtml = cell.innerHTML;

                        // Skip cells with complex HTML (like those with buttons)
                        if (cell.querySelector('div.btn-group')) return;

                        let newHtml = originalHtml;
                        termParts.forEach(term => {
                            // Create a regex that's case insensitive
                            const regex = new RegExp('(' + term.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + ')', 'gi');
                            newHtml = newHtml.replace(regex, '<mark>$1</mark>');
                        });

                        if (newHtml !== originalHtml) {
                            cell.innerHTML = newHtml;
                        }
                    });
                });
            };

            // Run highlighting on page load
            highlightSearchTerms();
        });
    </script>

    <style>
        /* Styles for search highlighting */
        mark {
            background-color: #fff3cd;
            padding: 0.1em 0.2em;
            border-radius: 2px;
        }

        /* Make the search input more prominent */
        .input-group .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
        }
    </style>
}