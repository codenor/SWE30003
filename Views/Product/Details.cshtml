@model ProductViewModel

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <img src="@Model.ImagePath" class="img-fluid rounded" alt="@Model.Name">
            }
            else
            {
                <div class="bg-light rounded d-flex align-items-center justify-content-center" style="height: 400px;">
                    <i class="bi bi-image text-muted" style="font-size: 4rem;"></i>
                </div>
            }
        </div>
        <div class="col-md-6">
            <h1>@Model.Name</h1>
            <p class="lead">@Model.Description</p>
            
            <div class="row mb-3">
                <div class="col-sm-6">
                    <strong>Category:</strong> @Model.Category
                </div>
                @if (!string.IsNullOrEmpty(Model.Brand))
                {
                    <div class="col-sm-6">
                        <strong>Brand:</strong> @Model.Brand
                    </div>
                }
            </div>
            
            <div class="row mb-3">
                <div class="col-sm-6">
                    <strong>SKU:</strong> @Model.SKU
                </div>
                <div class="col-sm-6">
                    <strong>Stock:</strong> 
                    <span class="@(Model.IsInStock ? "text-success" : "text-danger")">
                        @Model.StockLevel
                        @if (Model.IsLowStock && Model.IsInStock)
                        {
                            <small class="text-warning">(Low Stock)</small>
                        }
                    </span>
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.Specifications))
            {
                <div class="mb-3">
                    <strong>Specifications:</strong>
                    <p>@Model.Specifications</p>
                </div>
            }
            
            <div class="border-top pt-3">
                <h2 class="text-primary mb-3">$@Model.Price.ToString("F2")</h2>
                
                @if (Model.IsInStock)
                {
                    <!-- Add to Cart Form -->
                    <form method="post" asp-controller="ShoppingCart" asp-action="AddToCart" class="mb-3">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="productId" value="@Model.ProductId" />
                        <input type="hidden" name="returnUrl" value="@Url.Action("Details", "Product", new { id = Model.ProductId })" />
                        
                        <div class="row">
                            <div class="col-sm-4">
                                <label for="quantity" class="form-label">Quantity:</label>
                                <input type="number" id="quantity" name="quantity" value="1" 
                                       min="1" max="@Model.StockLevel" class="form-control" />
                            </div>
                            <div class="col-sm-8 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary btn-lg me-2">
                                    <i class="bi bi-cart-plus"></i> Add to Cart
                                </button>
                                <a href="@Url.Action("Index", "ShoppingCart")" class="btn btn-outline-secondary">
                                    <i class="bi bi-cart"></i> View Cart
                                </a>
                            </div>
                        </div>
                    </form>
                    
                    @if (Model.IsLowStock)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i> 
                            Only @Model.StockLevel left in stock - order soon!
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-danger">
                        <i class="bi bi-x-circle"></i> This product is currently out of stock.
                    </div>
                    <button class="btn btn-secondary btn-lg" disabled>
                        <i class="bi bi-x-circle"></i> Out of Stock
                    </button>
                }
            </div>
        </div>
    </div>
    
    <div class="row mt-4">
        <div class="col-12">
            <a href="@Url.Action("Catalogue", "Product")" class="btn btn-outline-primary">
                <i class="bi bi-arrow-left"></i> Back to Products
            </a>
        </div>
    </div>
</div>


@* @model ProductViewModel *@
@* *@
@* @{ *@
@*     ViewData["Title"] = "Product Details"; *@
@* } *@
@* *@
@* <div class="container py-5"> *@
@*     <h2>Product Details</h2> *@
@* *@
@*     <div class="row"> *@
@*         <div class="col-md-8"> *@
@*             <dl class="row"> *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.SKU)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.SKU)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Description)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.Description)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Price)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.Price)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.Category)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Brand)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.Brand)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.StockLevel)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.StockLevel)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.LowStockThreshold)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.LowStockThreshold)</dd> *@
@* *@
@*                 <dt class="col-sm-3">@Html.DisplayNameFor(model => model.IsActive)</dt> *@
@*                 <dd class="col-sm-9">@Html.DisplayFor(model => model.IsActive)</dd> *@
@*             </dl> *@
@*         </div> *@
@*         <div class="col-md-4"> *@
@*             @if (!string.IsNullOrEmpty(Model.ImagePath)) *@
@*             { *@
@*                 <img src="@Model.ImagePath" alt="@Model.Name" class="img-fluid"/> *@
@*             } *@
@*         </div> *@
@*     </div> *@
@* *@
@*     <div class="mt-3"> *@
@*         <a asp-action="Edit" asp-route-id="@Model.ProductId" class="btn btn-primary">Edit</a> *@
@*         <a asp-action="Index" class="btn btn-secondary">Back to List</a> *@
@*     </div> *@
@* </div> *@