@{
    ViewData["Title"] = "Home";
}

<!-- Hero Section -->
<section class="hero-section position-relative mb-5 my-5">
    @await Component.InvokeAsync("HeroCarousel", new { count = 3 })
</section>

<!-- Category Navigation -->
<section class="category-section mb-5">
    <div class="container">
        <div class="row g-4">
            <div class="col-6 col-md-3">
                <a href="@Url.Action("Catalogue", "Product", new { category = "Smartphones" })" class="category-card">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <i class="bi bi-phone display-4 mb-3 text-primary"></i>
                            <h5 class="card-title mb-0">Smartphones</h5>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-6 col-md-3">
                <a href="@Url.Action("Catalogue", "Product", new { category = "Laptops" })" class="category-card">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <i class="bi bi-laptop display-4 mb-3 text-success"></i>
                            <h5 class="card-title mb-0">Laptops</h5>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-6 col-md-3">
                <a href="@Url.Action("Catalogue", "Product", new { category = "Tablets" })" class="category-card">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <i class="bi bi-tablet display-4 mb-3 text-info"></i>
                            <h5 class="card-title mb-0">Tablets</h5>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-6 col-md-3">
                <a href="@Url.Action("Catalogue", "Product", new { category = "Accessories" })" class="category-card">
                    <div class="card h-100 border-0 shadow-sm">
                        <div class="card-body text-center p-4">
                            <i class="bi bi-headphones display-4 mb-3 text-warning"></i>
                            <h5 class="card-title mb-0">Accessories</h5>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</section>

<!-- Featured Products -->
<section class="featured-products mb-5">
    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="section-title">Featured Products</h2>
            <a href="@Url.Action("Catalogue", "Product")" class="btn btn-outline-primary">View All</a>
        </div>

        <div class="row g-4">
            @await Component.InvokeAsync("FeaturedProducts", new { count = 4 })
        </div>
    </div>
</section>




@section Styles {
    <style>
        .hero-section {
            margin-top: -1.5rem;
        }

        .hero-slide {
            min-height: 500px;
            padding: 4rem 0;
        }

        .hero-product-image {
            max-height: 400px;
            width: auto;
            object-fit: contain;
        }

        .category-card {
            text-decoration: none;
            color: inherit;
            display: block;
            transition: transform 0.3s ease;
        }

        .category-card:hover {
            transform: translateY(-5px);
        }

        .section-title {
            position: relative;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }

        .promo-card {
            height: 250px;
            transition: transform 0.3s ease;
        }

        .promo-card:hover {
            transform: translateY(-5px);
        }

        .avatar {
            width: 40px;
            height: 40px;
        }

        .avatar-initial {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 500;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize Bootstrap carousel
            var heroCarousel = new bootstrap.Carousel(document.getElementById('heroCarousel'), {
                interval: 5000
            });
        });
    </script>
}
