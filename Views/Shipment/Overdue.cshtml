@model IEnumerable<ElectronicsStoreAss3.Models.Shipment.Shipment>

@{
    ViewData["Title"] = "Overdue Shipments";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="bi bi-exclamation-triangle text-danger"></i> Overdue Shipments</h2>
        <div>
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-list"></i> All Shipments
            </a>
            <a asp-action="Pending" class="btn btn-outline-warning">
                <i class="bi bi-clock"></i> Pending
            </a>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-success text-center">
            <h4><i class="bi bi-check-circle"></i> No Overdue Shipments!</h4>
            <p>All shipments are on track. Great job!</p>
            <a asp-action="Index" class="btn btn-primary">View All Shipments</a>
        </div>
    }
    else
    {
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle"></i>
            <strong>@Model.Count()</strong> shipments are overdue and require immediate attention!
        </div>

        <div class="table-responsive">
            <table class="table table-hover">
                <thead class="table-dark">
                <tr>
                    <th>Priority</th>
                    <th>Tracking #</th>
                    <th>Order #</th>
                    <th>Customer</th>
                    <th>Expected Delivery</th>
                    <th>Days Overdue</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var shipment in Model.OrderBy(s => s.EstimatedDeliveryDate))
                {
                    var daysOverdue = (DateTime.Now.Date - shipment.EstimatedDeliveryDate.Date).Days;
                    var priorityClass = daysOverdue > 7 ? "table-danger" : daysOverdue > 3 ? "table-warning" : "";

                    <tr class="@priorityClass">
                        <td>
                            @if (daysOverdue > 7)
                            {
                                <span class="badge bg-danger">CRITICAL</span>
                            }
                            else if (daysOverdue > 3)
                            {
                                <span class="badge bg-warning">HIGH</span>
                            }
                            else
                            {
                                <span class="badge bg-info">MEDIUM</span>
                            }
                        </td>
                        <td><code>@shipment.TrackingNumber</code></td>
                        <td>
                            <a asp-controller="Order" asp-action="Details" asp-route-id="@shipment.OrderId">
                                #@shipment.OrderId
                            </a>
                        </td>
                        <td>
                            @if (shipment.Order.Customer != null)
                            {
                                <div>
                                    <strong>@shipment.Order.Customer.FirstName @shipment.Order.Customer.LastName</strong>
                                    <br/>
                                    <small class="text-muted">@shipment.Order.Customer.Email</small>
                                    <br/>
                                    <small class="text-muted">@shipment.Order.Customer.Mobile</small>
                                </div>
                            }
                            else
                            {
                                <span class="text-muted">Guest Order</span>
                            }
                        </td>
                        <td>
                                <span class="text-danger">
                                    @shipment.EstimatedDeliveryDate.ToString("MMM dd, yyyy")
                                </span>
                            <br/>
                            <small class="text-muted">Expected</small>
                        </td>
                        <td>
                                <span class="badge bg-danger">
                                    @daysOverdue day@(daysOverdue != 1 ? "s" : "")
                                </span>
                        </td>
                        <td>
                            <span class="badge bg-warning">@shipment.Status</span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@shipment.ShipmentId"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> View
                                </a>

                                <!-- Emergency Actions -->
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-danger dropdown-toggle"
                                            data-bs-toggle="dropdown">
                                        <i class="bi bi-exclamation-triangle"></i> Urgent
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a class="dropdown-item" href="#"
                                               onclick="updateStatus(@shipment.ShipmentId, 'In Transit')">
                                                <i class="bi bi-arrow-right"></i> Mark In Transit
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="#"
                                               onclick="updateStatus(@shipment.ShipmentId, 'Delivered')">
                                                <i class="bi bi-check-circle"></i> Mark Delivered
                                            </a>
                                        </li>
                                        <li>
                                            <hr class="dropdown-divider">
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="#"
                                               onclick="updateStatus(@shipment.ShipmentId, 'Failed')">
                                                <i class="bi bi-x-circle"></i> Mark as Failed
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item" href="#"
                                               onclick="extendDelivery(@shipment.ShipmentId)">
                                                <i class="bi bi-calendar-plus"></i> Extend Delivery Date
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <!-- Summary Cards -->
        <div class="row mt-4">
            <div class="col-md-4">
                <div class="card border-danger">
                    <div class="card-body text-center">
                        <h5 class="card-title text-danger">Critical (7+ days)</h5>
                        <h2 class="display-6">@Model.Count(s => (DateTime.Now.Date - s.EstimatedDeliveryDate.Date).Days > 7)</h2>
                        <p class="card-text">Requires immediate action</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card border-warning">
                    <div class="card-body text-center">
                        <h5 class="card-title text-warning">High Priority (3-7 days)</h5>
                        <h2 class="display-6">@Model.Count(s =>
                            {
                                var days = (DateTime.Now.Date - s.EstimatedDeliveryDate.Date).Days;
                                return days > 3 && days <= 7;
                            })</h2>
                        <p class="card-text">Needs attention soon</p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card border-info">
                    <div class="card-body text-center">
                        <h5 class="card-title text-info">Medium (1-3 days)</h5>
                        <h2 class="display-6">@Model.Count(s =>
                            {
                                var days = (DateTime.Now.Date - s.EstimatedDeliveryDate.Date).Days;
                                return days >= 1 && days <= 3;
                            })</h2>
                        <p class="card-text">Monitor closely</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Emergency Actions</h5>
                        <button class="btn btn-danger me-2" onclick="notifyCustomers()">
                            <i class="bi bi-envelope"></i> Notify All Customers
                        </button>
                        <button class="btn btn-warning me-2" onclick="generateReport()">
                            <i class="bi bi-file-earmark-text"></i> Generate Overdue Report
                        </button>
                        <button class="btn btn-info" onclick="escalateToManager()">
                            <i class="bi bi-person-exclamation"></i> Escalate to Manager
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateStatus(shipmentId, status) {
            if (confirm(`Are you sure you want to mark this shipment as "${status}"?`)) {
                fetch('/Shipment/QuickStatusUpdate', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        shipmentId: shipmentId,
                        status: status
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('Failed to update status');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Error updating status');
                    });
            }
            

        }

        function extendDelivery(shipmentId) {
            var days = prompt('How many days to extend the delivery date?', '3');
            if (days && !isNaN(days)) {
                // Implement extend delivery logic
                alert(`Delivery date extended by ${days} days for shipment ${shipmentId}`);
            }
            

        }

        function notifyCustomers() {
            if (confirm('Send notification emails to all customers with overdue shipments?')) {
                alert('Customer notifications sent! (This is a demo)');
            }
            

        }

        function generateReport() {
            alert('Generating overdue shipments report... (This is a demo)');
        }

        function escalateToManager() {
            if (confirm('Escalate all overdue shipments to management?')) {
                alert('Escalation email sent to management! (This is a demo)');
            }
            

        }
    </script>
}